name: Desplegar Vue a ProducciÃ³n
run-name: ${{ github.actor }} estÃ¡ desplegando la aplicaciÃ³n Vue a PROD âœ…

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Obtener el cÃ³digo del repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar dependencias
        run: |
          cd vue-project
          npm ci
          # Verificar que el directorio assets existe
          mkdir -p src/assets

      - name: Construir aplicaciÃ³n Vue
        run: |
          cd vue-project
          # Mostrar estructura de directorios para depuraciÃ³n
          ls -la src/
          ls -la src/assets/ || echo "No assets directory found"
          ls -la public/ || echo "No public directory found"
          # Construir la aplicaciÃ³n
          npm run build
          # Verificar la construcciÃ³n
          ls -la dist/ || echo "No dist directory found"

      - name: Preparar para despliegue
        run: |
          echo "AcciÃ³n desplegando a producciÃ³n" > last_deploy.txt
          date >> last_deploy.txt

      - name: Desplegar a producciÃ³n
        run: |
          echo "${{ secrets.PROD_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          scp -r -o StrictHostKeyChecking=no -i "~/prod_key.pem" -o UserKnownHostsFile=/dev/null vue-project/dist/* ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:/home/a23aleminram/web/a23aleminram.daw.inspedralbes.cat/public_html/vue-app
          scp -r -o StrictHostKeyChecking=no -i "~/prod_key.pem" -o UserKnownHostsFile=/dev/null last_deploy.txt ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:/home/a23aleminram/web/a23aleminram.daw.inspedralbes.cat/public_html/vue-app

      - run: echo "ðŸ“Š This job's status is ${{ job.status }}."